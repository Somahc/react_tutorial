{"ast":null,"code":"var _jsxFileName = \"/Users/soma/my-works/905dba2d-37ba-44e3-905a-bf0dae937884/src/App.js\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction Square({\n  value,\n  onSquareClick,\n  isHighlighted\n}) {\n  return /*#__PURE__*/_jsxDEV(\"button\", {\n    className: isHighlighted ? \"highlighted-square\" : \"square\",\n    onClick: onSquareClick,\n    children: value\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 5,\n    columnNumber: 10\n  }, this);\n}\n_c = Square;\nfunction Board({\n  xIsNext,\n  squares,\n  onPlay\n}) {\n  _s();\n  const winner = calculateWinner(squares);\n  const [winnerLine, setWinnerLine] = useState(null);\n  useEffect(() => {\n    // squaresを監視し、変更された時実行\n    const winner = calculateWinner(squares);\n    if (winner) {\n      const lines = calculateWinnerLines(squares);\n      setWinnerLine(lines);\n    } else {\n      setWinnerLine(null); // 勝者がいない場合はnullをセット\n    }\n  }, [squares]);\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else if (squares.every(square => square !== null)) {\n    // squaresにnullが無い(=全てのマスが埋まっている)\n    status = \"Draw\";\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice(); // squaresをコピー\n    if (xIsNext) {\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  }\n  function renderSquare(i) {\n    const isHighlighted = winnerLine && winnerLine.includes(i);\n    return /*#__PURE__*/_jsxDEV(Square, {\n      value: squares[i],\n      onSquareClick: () => handleClick(i),\n      isHighlighted: isHighlighted\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this);\n  }\n  const boardRows = [];\n  for (let i = 0; i < 3; i++) {\n    const row = [];\n    for (let j = 0; j < 3; j++) {\n      row.push(renderSquare(i * 3 + j));\n    }\n    boardRows.push( /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-row\",\n      children: row\n    }, i, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 20\n    }, this));\n  }\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"status\",\n      children: status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), boardRows]\n  }, void 0, true);\n}\n_s(Board, \"110BrLz7CUTDjKgRJHzuayPGv2Y=\");\n_c2 = Board;\nfunction calculateWinner(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\nfunction calculateWinnerLines(squares) {\n  const lines = [[0, 1, 2], [3, 4, 5], [6, 7, 8], [0, 3, 6], [1, 4, 7], [2, 5, 8], [0, 4, 8], [2, 4, 6]];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return lines[i];\n    }\n  }\n  return null;\n}\nexport default function Game() {\n  _s2();\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  const [isAscending, setIsAscending] = useState(true);\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n  function toggleSortMode() {\n    setIsAscending(!isAscending);\n  }\n  let sortedMoves = [...history.keys()].slice();\n  if (!isAscending) {\n    sortedMoves = sortedMoves.reverse();\n  }\n  const moves = sortedMoves.map(move => {\n    const description = move > 0 ? `Go to move #${move} (${calculateRowCol(move)})` : 'Go to game start';\n    return /*#__PURE__*/_jsxDEV(\"li\", {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => jumpTo(move),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this)\n    }, move, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this);\n  });\n  function calculateRowCol(move) {\n    const row = Math.floor((move - 1) / 3) + 1;\n    const col = (move - 1) % 3 + 1;\n    return `(${row}, ${col})`;\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-board\",\n      children: /*#__PURE__*/_jsxDEV(Board, {\n        xIsNext: xIsNext,\n        squares: currentSquares,\n        onPlay: handlePlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"game-info\",\n      children: [/*#__PURE__*/_jsxDEV(\"ol\", {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: toggleSortMode,\n          children: \"Toggle Sort Mode\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: moves\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"ol\", {\n        children: [\"You are at move # \", history.length]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n_s2(Game, \"DKiRlZvFq+ondew60D98gPZJtXc=\");\n_c3 = Game;\nvar _c, _c2, _c3;\n$RefreshReg$(_c, \"Square\");\n$RefreshReg$(_c2, \"Board\");\n$RefreshReg$(_c3, \"Game\");","map":{"version":3,"names":["useState","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","Square","value","onSquareClick","isHighlighted","className","onClick","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","Board","xIsNext","squares","onPlay","_s","winner","calculateWinner","winnerLine","setWinnerLine","lines","calculateWinnerLines","status","every","square","handleClick","i","nextSquares","slice","renderSquare","includes","boardRows","row","j","push","_c2","length","a","b","c","Game","_s2","history","setHistory","Array","fill","currentMove","setCurrentMove","currentSquares","isAscending","setIsAscending","handlePlay","nextHistory","jumpTo","nextMove","toggleSortMode","sortedMoves","keys","reverse","moves","map","move","description","calculateRowCol","Math","floor","col","_c3","$RefreshReg$"],"sources":["/Users/soma/my-works/905dba2d-37ba-44e3-905a-bf0dae937884/src/App.js"],"sourcesContent":["import { useState, useEffect } from 'react';  \n\nfunction Square({ value, onSquareClick, isHighlighted }) {\n\n  return <button \n            className={isHighlighted ? \"highlighted-square\" : \"square\"}\n            onClick={onSquareClick}\n          >\n            {value}\n          </button>;\n}\n\nfunction Board({ xIsNext, squares, onPlay }) {\n  const winner = calculateWinner(squares);\n  const [winnerLine, setWinnerLine] = useState(null);\n\n  useEffect(() => { // squaresを監視し、変更された時実行\n    const winner = calculateWinner(squares);\n    if (winner) {\n      const lines = calculateWinnerLines(squares);\n      setWinnerLine(lines);\n    } else {\n      setWinnerLine(null); // 勝者がいない場合はnullをセット\n    }\n  }, [squares]);\n\n  let status;\n  if (winner) {\n    status = \"Winner: \" + winner;\n  } else if (squares.every((square) => square !== null)){ // squaresにnullが無い(=全てのマスが埋まっている)\n    status = \"Draw\";\n  } else {\n    status = \"Next player: \" + (xIsNext ? \"X\" : \"O\");\n  }\n\n  function handleClick(i) {\n    if (squares[i] || calculateWinner(squares)) {\n      return;\n    }\n    const nextSquares = squares.slice(); // squaresをコピー\n    if(xIsNext){\n      nextSquares[i] = \"X\";\n    } else {\n      nextSquares[i] = \"O\";\n    }\n    onPlay(nextSquares);\n  }\n\n  function renderSquare(i) {\n    const isHighlighted = winnerLine && winnerLine.includes(i);\n    return (\n      <Square\n        key={i}\n        value={squares[i]}\n        onSquareClick={() => handleClick(i)}\n        isHighlighted={isHighlighted}\n      />\n    );\n  }\n\n  const boardRows = [];\n  for (let i = 0; i < 3; i++) {\n    const row = [];\n    for (let j = 0; j < 3; j++) {\n      row.push(renderSquare(i * 3 + j));\n    }\n    boardRows.push(<div key={i} className=\"board-row\">{row}</div>);\n  }\n  return (\n    <>\n      <div className=\"status\">{status}</div>\n      {boardRows}\n    </>\n  );\n}\n\nfunction calculateWinner(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return squares[a];\n    }\n  }\n  return null;\n}\n\nfunction calculateWinnerLines(squares) {\n  const lines = [\n    [0, 1, 2],\n    [3, 4, 5],\n    [6, 7, 8],\n    [0, 3, 6],\n    [1, 4, 7],\n    [2, 5, 8],\n    [0, 4, 8],\n    [2, 4, 6]\n  ];\n  for (let i = 0; i < lines.length; i++) {\n    const [a, b, c] = lines[i];\n    if (squares[a] && squares[a] === squares[b] && squares[a] === squares[c]) {\n      return lines[i];\n    }\n  }\n  return null;\n}\n\nexport default function Game() {\n  const [history, setHistory] = useState([Array(9).fill(null)]);\n  const [currentMove, setCurrentMove] = useState(0);\n  const xIsNext = currentMove % 2 === 0;\n  const currentSquares = history[currentMove];\n  const [isAscending, setIsAscending] = useState(true);\n\n  function handlePlay(nextSquares) {\n    const nextHistory = [...history.slice(0, currentMove + 1), nextSquares];\n    setHistory(nextHistory);\n    setCurrentMove(nextHistory.length - 1);\n  }\n\n  function jumpTo(nextMove) {\n    setCurrentMove(nextMove);\n  }\n\n  function toggleSortMode() {\n    setIsAscending(!isAscending);\n  }\n\n  let sortedMoves = [...history.keys()].slice();\n  if (!isAscending) {\n    sortedMoves = sortedMoves.reverse();\n  }\n\n  const moves = sortedMoves.map((move) => {\n    const description = move > 0 ? `Go to move #${move} (${calculateRowCol(move)})` : 'Go to game start';\n    return (\n      <li key={move}>\n        <button onClick={() => jumpTo(move)}>{description}</button>\n      </li>\n    );\n  });\n\n  function calculateRowCol(move) {\n    const row = Math.floor((move - 1) / 3) + 1;\n    const col = (move - 1) % 3 + 1;\n    return `(${row}, ${col})`;\n  }\n\n  return (\n    <div className=\"game\">\n      <div className=\"game-board\">\n        <Board xIsNext={xIsNext} squares={currentSquares} onPlay={handlePlay} />\n      </div>\n      <div className=\"game-info\">\n        <ol><button onClick={toggleSortMode}>Toggle Sort Mode</button></ol>\n        <ol>{moves}</ol>\n        <ol>You are at move # {history.length}</ol>\n      </div>\n    </div>\n  )\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}